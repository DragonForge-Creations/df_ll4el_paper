import io.papermc.paperweight.userdev.ReobfArtifactConfiguration

plugins {
    id 'java-library'
    id 'maven-publish'
    id("io.papermc.paperweight.userdev") version "1.7.2"
    id("xyz.jpenilla.run-paper") version "2.3.0"
}


group = "$group"
version = "$plugin_version-$minecraft_version-$build_status-B$build_number"

repositories {
    mavenCentral()
    maven { url = 'https://maven.maxhenkel.de/repository/public/' }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "dragonforge"
        url = "https://repo.vanillaflux.com/repository/dragonforge/"
    }
}


dependencies {
    paperweight.paperDevBundle("${minecraft_version}-${paper_build}")
    implementation("me.quickscythe:df_core_paper:${df_core_version}")


}



paperweight.reobfArtifactConfiguration = ReobfArtifactConfiguration.getMOJANG_PRODUCTION()
def targetJavaVersion = Integer.parseInt(java_version)
java {
    withSourcesJar()
    withJavadocJar()
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: "$plugin_version", main: "$main_class"]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

runServer {
    pluginJars.from(configurations.runtimeClasspath)
}